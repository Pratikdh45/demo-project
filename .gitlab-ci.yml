stages:
#  - build
#  - test
  - docker_build
  - deploy

variables:
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"
  MAVEN_OPTS: "-Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository"
  DOCKER_IMAGE_PREFIX: "repository/docker-private/demo-project/quarkus-helloworld"
  CI_REGISTRY_IMAGE: "172.30.38.4:8083/repository/docker-private/demo-project/quarkus-helloworld"
  OC_IMAGE_NAME_AND_TAG: "172.30.38.4:8083/repository/docker-private/alpine:oc-4.10.4"
  OPENSHIFT_PROJECT: "quarkus-helloworld"

# build:
#   stage: build
#   image: maven:3.8.4-openjdk-11-slim
#   script:
#     - mvn clean package -DskipTests -Dquarkus.container-image.build=false
#   artifacts:
#     paths:
#       - target/*.jar
#   tags:
#     - master

# test:
#   stage: test
#   image: maven:3.8.4-openjdk-11-slim
#   script:
#     - mvn $MAVEN_CLI_OPTS test sonar:sonar -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_LOGIN -Dsonar.password=$SONAR_PASSWORD
#   tags:
#    - master


docker_build:
  stage: docker_build
  image:
    name: docker:19.03.14
  variables:
    DOCKER_HOST: tcp://dind.gitlab-runner:2375
  services:
  - name: docker:19.03.14-dind
    entrypoint: ["env", "-u", "DOCKER_HOST"]
    command: ["dockerd-entrypoint.sh"]
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
    - echo $HOME/.docker/config.json
    - echo "Preparing for Docker image..."
  script:
    - docker build -t $DOCKER_IMAGE_PREFIX .
    - docker images
    - docker tag "$DOCKER_IMAGE_PREFIX" "$CI_REGISTRY_IMAGE:${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}"
    - docker push "$CI_REGISTRY_IMAGE:${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}"
  tags:
    - master

deploy:
  stage: deploy
  image: $OC_IMAGE_NAME_AND_TAG
  variables:
    DOCKER_HOST: tcp://dind.gitlab-runner:2375
  script:
    - echo "Deploying to OpenShift..."
    - |
      oc login https://api.openshift.mobicom.mn:6443 --token=$OCP_TOKEN_STG --insecure-skip-tls-verify=true
      oc project $OPENSHIFT_PROJECT
      oc apply -f k8s/deployment.yaml
  tags:
    - master
  when: manual
  allow_failure: true
